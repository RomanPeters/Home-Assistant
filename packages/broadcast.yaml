# When spoken notifications is turned on
# notifications will be played over the speakers with TTS if:
# someone is in the room and the door is closed 
# else the notification will be sent as a push notification on mobile


script:
  broadcast: 
    alias: Broadcast
    sequence:
      - alias: Choose method
        service_template: >
          {% if is_state('switch.do_not_disturb', 'off') %}
            script.announce
          {% else %}
            script.notificate
          {% endif %}
        data_template:
            title: "{{ title }}"
            message: "{{ message }}"

  notificate:
    alias: Notificate
    sequence: 
      - alias: Send Notification
        service: notify.notify
        data_template:
          title: "{{ title }}"
          message: "{{ message }}"

  announce:
    alias: Announce
    sequence:
      - service: sonos.snapshot        
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.sonos
          volume_level: "{{ states('input_number.spoken_notifications_volume') }}"
      - alias: Play Sound Effect
        service: media_player.play_media
        data:
          entity_id: media_player.sonos
          media_content_type: "audio/mp3"
          media_content_id: "http://10.10.10.20:8123/local/sound_effects/ping.wav"
      - delay:
              seconds: 1
      - alias: Play Message
        service: tts.google_translate_say
        data_template:
          entity_id: media_player.sonos
          message: "{{ message }}"
      - delay:
          seconds: 5
      - service: sonos.restore

automation:
  - alias: Test Spoken Notification
    trigger:
      platform: state
      entity_id: input_number.spoken_notifications_volume
    action:
      - service: script.broadcast
        data_template:
          message: "New volume set"
