binary_sensor:
  - platform: "mqtt"
    name: Door
    state_topic: "zigbee2mqtt/aqara_contact_sensor"
    availability_topic: "zigbee2mqtt/bridge/state"
    payload_on: false
    payload_off: true
    value_template: "{{ value_json.contact }}"
    device_class: "door"
    json_attributes_topic: "zigbee2mqtt/aqara_contact_sensor" 

  - platform: "template"
    sensors:
      door_icon:
        friendly_name: "Door"
        icon_template: >
          {% if is_state('binary_sensor.door', 'on') %}
            mdi:door-open
          {% else %}
            mdi:door
          {% endif %}
        value_template: "{{ is_state('binary_sensor.door', 'on') }}"

automation:
  - id: pause_apple_tv_when_door_opens
    alias: Pause Apple TV when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.door
        to: 'on'
    condition:
      - condition: state
        entity_id: media_player.apple_tv
        state: 'playing'
    action:
      - service: media_player.media_pause
        entity_id: media_player.apple_tv
      - wait_template: "{{ is_state('binary_sensor.door', 'off') }}"
      - service: media_player.media_play
        entity_id: media_player.apple_tv
  
  - id: pause_chromecast_when_door_opens
    alias: Pause Chromecast when door opens
    trigger:
      - platform: state
        entity_id: binary_sensor.door
        to: 'on'
    condition:
      - condition: state
        entity_id: media_player.chromecast
        state: 'playing'
    action:
      - service: media_player.media_pause
        entity_id: media_player.chromecast
      - wait_template: "{{ is_state('binary_sensor.door', 'off') }}"
      - service: media_player.media_play
        entity_id: media_player.chromecast