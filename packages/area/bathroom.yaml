input_boolean:
  bathroom_in_use:
    name: Bathroom in use

binary_sensor:
  - platform: "template"
    sensors:
      bathroom_occupied:
        friendly_name: Bathroom
        value_template: "{{ is_state('input_boolean.bathroom_in_use', 'on') }}"
        device_class: occupancy

automation:
# LIGHT AUTOMATION

  # Turn on the light
  - id: bathroom_in_use
    alias: Bathroom in use
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_occupied
        to: 'on'
    action:
      - service: light.turn_on
        entity_id: light.tradfri_control_outlet_light
      - service: media_player.volume_set
        data_template:
          entity_id: media_player.sonos
          volume_level: >
            {% if is_state('sensor.mijia_button', 'double') %}
              0.25
            {% elif is_state('sensor.mijia_button', 'triple') %}
              0.45
            {% elif is_state('sensor.mijia_button', 'quadruple') %}
              0.65
            {% elif is_state('sensor.mijia_button', 'many') %}
              0.85
            {% else %}
              0.15
            {% endif %}

  # Turn off the light
  - id: bathroom_out_of_use
    alias: Bathroom out of use
    trigger:
      - platform: state
        entity_id: binary_sensor.bathroom_occupied
        to: 'off'
    action:
      - service: light.turn_off
        entity_id: light.tradfri_control_outlet_light
      - service: media_player.volume_set
        data:
          entity_id: media_player.sonos
          volume_level: 0

  - id: bathroom_occupied_off
    alias: Bathroom occupied off
    trigger: 
      - platform: state
        entity_id: binary_sensor.mijia_motion_sensor_2
        to: 'off'
        for:
          minutes: 5
    action:
      - service: input_boolean.turn_off
        entity_id: input_boolean.bathroom_in_use

  - id: bathroom_occupied_on
    alias: Bathroom occupied on
    trigger:
      - platform: state
        entity_id: binary_sensor.mijia_motion_sensor_2
        to: 'on'
      - platform: state
        entity_id: binary_sensor.contact_sensor_2
        to: 'on'
    action:
        # TODO transition
      - service: input_boolean.turn_on
        entity_id: input_boolean.bathroom_in_use

homeassistant:
  customize:
    binary_sensor.bathroom_occupied:
      icon: mdi:run
