cover:
  - platform: mqtt
    name: Fyrtur
    command_topic: zigbee2mqtt/ikea_fyrtur/set
    position_topic: zigbee2mqtt/ikea_fyrtur
    set_position_topic: zigbee2mqtt/ikea_fyrtur/set
    value_template: "{{ value_json.position }}"
    set_position_template: "{ \"position\":{{ position }} }"

  - platform: mqtt
    name: Fyrtur 2
    command_topic: zigbee2mqtt/ikea_fyrtur_2/set
    position_topic: zigbee2mqtt/ikea_fyrtur_2
    set_position_topic: zigbee2mqtt/ikea_fyrtur_2/set
    value_template: "{{ value_json.position }}"
    set_position_template: "{ \"position\":{{ position }} }"
  
  - platform: mqtt
    name: Fyrtur 3
    command_topic: zigbee2mqtt/ikea_fyrtur_3/set
    position_topic: zigbee2mqtt/ikea_fyrtur_3
    set_position_topic: zigbee2mqtt/ikea_fyrtur_3/set
    value_template: "{{ value_json.position }}"
    set_position_template: "{ \"position\":{{ position }} }"

group:
  shades:
    name: Shades
    entities:
      - cover.fyrtur
      - cover.fyrtur_2
      - cover.fyrtur_3

automation:
  - id: close_shades
    alias: Close Shades
    trigger:
      - platform: sun
        event: sunset
        offset: "02:00:00"
      - platform: numeric_state
        entity_id: sensor.aqara_temperature
        below: 20
    condition:
      - condition: state
        entity_id: binary_sensor.home
        state: 'on'
      - condition: state
        entity_id: binary_sensor.dark
        state: 'on'
    action:
      service: cover.close_cover
      entity_id: group.shades


  - id: close_shades_coming_home
    alias: Close Shades Coming Home
    trigger: 
      - platform: state
        entity_id: binary_sensor.home
        to: 'on'
    condition:
      - condition: state
        entity_id: binary_sensor.dark
        state: 'on'
      - condition: or
        conditions:
          - condition: sun
            after: sunset
            after_offset: "02:00:00"
          - condition: numeric_state
            entity_id: 'sensor.aqara_temperature'
            below: 20
    action:
      service: cover.close_cover
      entity_id: group.shades


      # Experimental
  - id: open_shades
    alias: Open Shades
    trigger:
      - platform: state
        entity_id: binary_sensor.contact_sensor_3
        to: 'on'
    condition: 
      - condition: state
        entity_id: switch.television
        state: 'off'
      - condition: state
        entity_id: device_tracker.macbook_pro
        state: 'not_home'
    action:
      service: cover.open_cover
      entity_id: group.shades


homeassistant:
  customize:
    cover.fyrtur:
      friendly_name: Shade 1
      device_class: shade
    cover.fyrtur_2:
      friendly_name: Shade 2
      device_class: shade 
    cover.fyrtur_3:
      friendly_name: Shade 3
      device_class: shade

