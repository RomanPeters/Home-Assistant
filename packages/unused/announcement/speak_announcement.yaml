tts:
  - platform: google_translate

media_player:
  - platform: vlc_telnet
    host: 10.10.10.10
    password: "None"

script:
  speak:
    description: 'Speak TTS'
    fields:
      message:
        description: 'The message content'
        example: 'Hello World!'
      title:
        description: 'The message title'
        example: 'Hello World!'
    sequence:
      - service: switch.turn_on
        entity_id: switch.receiver
      - delay:
          seconds: 2
      - service: tts.google_translate_say
        data_template:
          entity_id: media_player.vlc_telnet
          message: "{{ message }}"
      - delay:
          seconds: 2
      - wait_template: "{{ not is_state('media_player.vlc_telnet', 'playing') }}"
      - wait_template: "{{ is_state('media_player.television', 'off') }}"
        timeout: '00:00:10'
        continue_on_timeout: 'false'
      - service: switch.turn_off
        entity_id: switch.receiver 

  speak_2:
    description: 'Speak and Pause'
    fields:
      message:
        description: 'The message content'
        example: 'Hello World!'
      title:
        description: 'The message title'
        example: 'Hello World!'
    sequence:
      - service: switch.turn_on
        entity_id: switch.receiver
      - service: media_player.media_pause
        entity_id: media_player.sonos
      - delay:
          seconds: 1
      - service: tts.google_translate_say
        data_template:
          entity_id: media_player.vlc_telnet
          message: "{{ message }}"
      - delay:
          seconds: 1
      - wait_template: "{{ not is_state('media_player.vlc_telnet', 'playing') }}"
      - service: media_player.media_play
        entity_id: media_player.sonos
      - wait_template: "{{ is_state('media_player.television', 'off') }}"
        timeout: '00:00:10'
        continue_on_timeout: 'false'
      - service: switch.turn_off
        entity_id: switch.receiver              
