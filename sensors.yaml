- platform: file
  name: Minecraft Log
  file_path: /config/minecraft.log
  value_template: "{{ ':'.join(value.split(':')[3:]) }}"

- platform: postnl
  username: !secret mail
  password: !secret postnl_password

- platform: systemmonitor
  resources:
    - type: last_boot
    - type: disk_use_percent
      arg: /
    - type: memory_use_percent
    - type: load_5m

- platform: miflora
  mac: 'C4:7C:8D:66:42:FC'

- platform: buienradar
  monitored_conditions:
    - condition
    - humidity
    - temperature
    - pressure
    - precipitation
    - precipitation_forecast_total

- platform: waqi
  token: !secret waqi_token
  locations:
    - 'utrecht'
  stations:
    - 'de Jongweg, Utrecht'

- platform: time_date
  display_options:
    - 'time'

#- platform: waze_travel_time
#  name: Travel Time 
#  origin: device_tracker.iphone8
#  destination: sensor.travel_destination
#  region: 'EU'

#- platform: waze_travel_time
#  name: Travel time to home
#  origin: device_tracker.iphone8
#  destination: zone.home
#  region: 'EU'

# Templates
- platform: template
  sensors:
    travel_destination:
      value_template: >-
        {%- if is_state("group.roman", "not_home")  -%}
          {{ state_attr('zone.home', 'latitude') }}, {{ state_attr('zone.home', 'longitude') }}
        {%- elif state_attr('calendar.werk', 'start_time') and as_timestamp(state_attr('calendar.activiteiten', 'start_time')) - as_timestamp(now()) < 5400 -%}
          {{ state_attr('zone.work', 'latitude') }}, {{ state_attr('zone.work', 'longitude') }}
        {%- else -%}
          {{ state_attr('zone.university', 'latitude') }}, {{ state_attr('zone.university', 'longitude') }}
        {%- endif -%}
    travel_description:
      friendly_name: Destination
      value_template: >-
        {%- if is_state("group.roman", "not_home")  -%}
          Home via {{ state_attr('sensor.travel_time', 'route') }}
        {%- elif state_attr('calendar.werk', 'start_time') and as_timestamp(state_attr('calendar.activiteiten', 'start_time')) - as_timestamp(now()) < 5400 -%}
          Work via {{ state_attr('sensor.travel_time', 'route') }}
        {%- else -%}
          University via {{ state_attr('sensor.travel_time', 'route') }}
        {%- endif -%}
    air_quality_status:
      friendly_name: AQI
      # Based on EPA AQI: https://en.wikipedia.org/wiki/Air_quality_index#Computing_the_AQI
      value_template: >
        {% if states('sensor.particle_sensor_pm25') | int <= 12 and states('sensor.particle_sensor_pm10') | int <= 54 %}
          Good
        {% elif states('sensor.particle_sensor_pm25') | float <= 35.4 and states('sensor.particle_sensor_pm10') | int <= 154 %}
          Moderate
        {% elif states('sensor.particle_sensor_pm25') | float <= 55.4 and states('sensor.particle_sensor_pm10') | int <= 254 %}
          Unhealthy for Sensitive Groups
        {% elif states('sensor.particle_sensor_pm25') | float <= 150.4 and states('sensor.particle_sensor_pm10') | int <= 354 %}
          Unhealthy
        {% elif states('sensor.particle_sensor_pm25') | float <= 250.4 and states('sensor.particle_sensor_pm10') | int <= 424 %}
          Very Unhealthy
        {% else %}
          Hazardous
        {% endif %}

    world_air_quality_status:
      friendly_name: WAQI
      value_template: >
        {% if states('sensor.waqi_de_jongweg_utrecht') | int <= 50 %}
          Good
        {% elif states('sensor.waqi_de_jongweg_utrecht') | int <= 100 %}
          Moderate
        {% elif states('sensor.waqi_de_jongweg_utrecht') | int <= 150 %}
          Unhealthy for Sensitive Groups
        {% elif states('sensor.waqi_de_jongweg_utrecht') | int <= 200 %}
          Unhealthy
        {% elif states('sensor.waqi_de_jongweg_utrecht') | int <= 300 %}
          Very Unhealthy
        {% else %}
          Hazardous
        {% endif %}

    waqi_particle_sensor_pm25:
      friendly_name: WAQI PM2.5
      unit_of_measurement: "μg/m3"
      value_template: >
        {{ state_attr('sensor.waqi_de_jongweg_utrecht', 'pm_2_5') }}
    waqi_particle_sensor_pm10:
      friendly_name: WAQI PM10
      unit_of_measurement: "μg/m3"
      value_template: >
        {{ state_attr('sensor.waqi_de_jongweg_utrecht', 'pm_10') }}

    plant_summary:
      friendly_name: "Plant"
      value_template: > 
        {% if is_state('plant.plant', 'ok') %}
          Your plant is doing fantastic!
        {% elif is_state('plant.plant', 'unknown') %}
          I'm not sure how your plant is doing.
        {% endif %}
        {% for problem in states.plant.plant.attributes.problem.split(', ') -%}
          {%- if loop.first %}The plant {% elif loop.last %} and {% else %}, {% endif -%}
          {%- if problem == 'moisture high' -%}
            has too much water
          {%- elif problem == 'moisture low' -%}
            would like some water
          {%- elif problem == 'batter low' -%}
            sensor battery is almost empty
          {%- elif problem ==  'temperature low' -%}
            is too cold
          {%- elif problem == 'temperature high' -%}
            is too hot
          {%- elif problem == 'conductivity high' -%}
            has too much nutrients
          {%- elif problem == 'conductivity low' -%}
            has not enough nutrients
          {%- elif problem == 'brightness high' -%}
            recieves too much sunlight
          {%- elif problem == 'brightness low' -%}
            doesn't receive enough sunlight
          {%- else -%}
            {{ problem }}
          {%- endif -%}
        {%- endfor -%}.
      icon_template: >
        {% if is_state('sensor.plant_emoji', 'perfect') %}
          mdi:emoticon-happy
        {% elif is_state('sensor.plant_emoji', 'unkown') %}
          mdi:help-circle
        {% elif states('sensor.plant_emoji').split(',') | length == 1  %}
          mdi:emoticon-neutral
        {% else %}
          mdi:emoticon-sad
        {% endif %}

    status_summary:
      friendly_name: Status Summary
      value_template: >
        {% if is_state("group.roman", "home") and is_state("group.nadine", "home") -%}
          Roman and Nadine are
        {%- elif is_state("group.roman", "home") -%}
          Roman is
        {%- elif is_state("group.nadine", "home") -%}
          Nadine is
        {%- elif now().timestamp() - states.group.roman.last_changed.timestamp() < 86400 -%}
          Roman left at {{ (states.group.roman.last_changed | string )[11:16] }}.
        {%- else -%}
          No one is home.{%- endif -%}
        {%- if (is_state("group.roman", "home") or is_state("group.nadine", "home")) and is_state("switch.television", "on") -%}
          {{ " " }}watching television.
        {%- elif (is_state("group.roman", "home") or is_state("group.nadine", "home")) and is_state("input_select.home_status", "Night") -%}
          {{ " " }}in bed.
        {%- elif is_state("group.roman", "home") or is_state("group.nadine", "home") -%}
          {{ " " }}home.{%- endif -%}

          {{ " " }}Current temperature is {{ state_attr('climate.thermostat', 'current_temperature') }}°
        {%- if is_state("climate.thermostat", "idle") -%}
          , guarded at {{ states.climate.thermostat.attributes.temperature }}°.
        {%- elif is_state("climate.thermostat", "heat") -%}
          , warming to {{ states.climate.thermostat.attributes.temperature }}°.
        {%- else -%}
          .
        {%- endif -%}
        {%- if is_state("binary_sensor.door", "on") and is_state("binary_sensor.window", "on") -%}
          {{ " " }}The door and the window are both open.
        {%- elif is_state("binary_sensor.door", "on") -%}
          {{ " " }}The door is open.
        {%- elif is_state("binary_sensor.window", "on") -%}
          {{ " " }}The window is open.
        {%- endif %}
        {%- if is_state('sensor.dht_temperature', 'unavailable') -%}
          {{ " " }}The secondary Home Assistant instance seems to be offline.
        {%- endif %}
        {%- for i in states.group.status.attributes.entity_id if is_state(i, 'on') -%}
          {%- if loop.first %}{{ " " }}The {% elif loop.last %} and the {% else %}, the {% endif -%}
          {{ state_attr(i, 'friendly_name') | lower }} is {{ states(i) }}
          {%- if loop.last %}.{% endif -%}
        {%- endfor -%}
        {%- if is_state("group.status", "off") and (is_state("climate.thermostat", "heat") or is_state("climate.thermostat", "idle") or is_state("switch.television", "on")) -%}
          {{ " " }}All other devices are off.
        {%- elif is_state("group.status", "off") -%}
          {{ " " }}All devices are off.
        {%- endif %}




### MQTT
- platform: "mqtt"
  name: Mijia Button
  state_topic: "zigbee2mqtt/mijia_button"
  availability_topic: "zigbee2mqtt/bridge/state"
  icon: "mdi:toggle-switch"
  value_template: "{{ value_json.click }}"
  json_attributes_topic: "zigbee2mqtt/mijia_button"
  force_update: true

- platform: "mqtt"
  name: Aqara Wall Switch
  state_topic: "zigbee2mqtt/aqara_wall_switch"
  availability_topic: "zigbee2mqtt/bridge/state"
  icon: "mdi:toggle-switch"
  value_template: "{{ value_json.click }}"
  json_attributes_topic: "zigbee2mqtt/aqara_wall_switch"
  force_update: true

- platform: "mqtt"
  name: Aqara Temperature
  state_topic: "zigbee2mqtt/aqara_temperature_sensor"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "°C"
  icon: "mdi:thermometer"
  value_template: "{{ value_json.temperature }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor"

- platform: "mqtt"
  name: Aqara Humidity
  state_topic: "zigbee2mqtt/aqara_temperature_sensor"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "%"
  icon: "mdi:water-percent"
  value_template: "{{ value_json.humidity }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor"

- platform: "mqtt"
  name: Aqara Pressure
  state_topic: "zigbee2mqtt/aqara_temperature_sensor"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "hPa"
  icon: "mdi:speedometer"
  value_template: "{{ value_json.pressure }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor"

- platform: "mqtt"
  name: Aqara Temperature 2
  state_topic: "zigbee2mqtt/aqara_temperature_sensor_2"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "°C"
  icon: "mdi:thermometer"
  value_template: "{{ value_json.temperature }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor_2"

- platform: "mqtt"
  name: Aqara Humidity 2
  state_topic: "zigbee2mqtt/aqara_temperature_sensor_2"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "%"
  icon: "mdi:water-percent"
  value_template: "{{ value_json.humidity }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor_2"

- platform: "mqtt"
  name: Aqara Pressure 2
  state_topic: "zigbee2mqtt/aqara_temperature_sensor_2"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "hPa"
  icon: "mdi:speedometer"
  value_template: "{{ value_json.pressure }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor_2"

- platform: "mqtt"
  name: Aqara Illuminance
  state_topic: "zigbee2mqtt/aqara_temperature_sensor_2"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "lx"
  icon: "mdi:theme-light-dark"
  value_template: "{{ value_json.illuminance }}"
  json_attributes_topic: "zigbee2mqtt/aqara_temperature_sensor_2"

- platform: "mqtt"
  name: Tradfri Dimmer
  state_topic: "zigbee2mqtt/tradfri_dimmer"
  availability_topic: "zigbee2mqtt/bridge/state"
  unit_of_measurement: "brightness"
  icon: "mdi:brightness-5"
  value_template: "{{ value_json.brightness }}"
  json_attributes_topic: "zigbee2mqtt/tradfri_dimmer"

#- platform: "mqtt"
#  name: Mi Flora Moisture
#  state_topic: "satellite/sensor/mi_flora_moisture/state"
#  availability_topic: "satellite/state"
#  unit_of_measurement: "%"

#- platform: "mqtt"
#  name: Mi Flora Conductivity
#  state_topic: "satellite/sensor/mi_flora_conductivity/state"
#  availability_topic: "satellite/state"
#  unit_of_measurement: "µS/cm"

#- platform: "mqtt"
#  name: Mi Flora Temperature
#  state_topic: "satellite/sensor/mi_flora_temperature/state"
#  availability_topic: "satellite/state"
#  unit_of_measurement: "°C"

#- platform: "mqtt"
#  name: Mi Flora Light Intensity
#  state_topic: "satellite/sensor/mi_flora_light_intensity/state"
#  availability_topic: "satellite/state"
#  unit_of_measurement: "lx"

#- platform: "mqtt"
#  name: Mi Flora Battery
#  state_topic: "satellite/sensor/mi_flora_battery/state"
#  availability_topic: "satellite/state"
#  unit_of_measurement: "%"

- platform: "mqtt"
  name: Particle Sensor PM2.5
  state_topic: "satellite/sensor/pm25/state"
#  availability_topic: "satellite/state"
  unit_of_measurement: "μg/m3"

- platform: "mqtt"
  name: Particle Sensor PM10
  state_topic: "satellite/sensor/pm10/state"
#  availability_topic: "satellite/state"
  unit_of_measurement: "μg/m3"

#- platform: "mqtt"
#  name: DHT Temperature
#  state_topic: "satellite/sensor/dht_sensor_temperature/state"
##  availability_topic: "satellite/state"
#  unit_of_measurement: "°C"

#- platform: "mqtt"
#  name: DHT Humidity
#  state_topic: "satellite/sensor/dht_sensor_humidity/state"
##  availability_topic: "satellite/state"
#  unit_of_measurement: "%"

#- platform: "mqtt"
#  name: BS440 Person 1
#  state_topic: "satellite/sensor/bs440/person1/state"
##  availability_topic: "satellite/state"
#  unit_of_measurement: "kg"
#  icon: "mdi:gauge"
#  value_template: "{{ value_json.weight }}"
#  json_attributes_topic: "satellite/sensor/bs440/person1/state"
