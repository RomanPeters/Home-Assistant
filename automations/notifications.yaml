# Boot
- id: notification_boot
  alias: Notification Boot
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: notify.notify
      data:
        message: "Home Assistant is online"

# Satellite status
- id: notification_satellite
  alias: Notification Satellite
  trigger:
    - platform: mqtt
      topic: satellite/state
  action:
    - service: notify.notify
      data_template:
        message: "Satellite is {{ trigger.payload }}"

# iPhone Status
- id: notification_iphone_status
  alias: Notification iPhone Status
  trigger:
    - platform: state
      entity_id: sensor.iphone_8_battery_state
      from: Unplugged
    - platform: state
      entity_id: sensor.iphone_8_battery_state
      to: Unplugged
  action:
    - service: notify.notify
      data_template:
        message: "Your iPhone 8 is {{ states('sensor.iphone_8_battery_state') | lower }}."

# Alarm Clock
- id: notification_alarm_clock
  alias: 'Notification Alarm Clock'
  trigger:
    - platform: template
      value_template: "{{ states('sensor.time') == (states.input_datetime.alarm_clock.attributes.timestamp | int | timestamp_custom('%H:%M', False)) }}"
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'on'
    - condition: state
      entity_id: input_select.home_status
      state: 'Away'
  action:
    - service: notify.notify
      data:
        message: "Your alarm clock has been triggered!"

- id: notification_set_alarm_clock
  alias: 'Notification set Alarm Clock'
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Night
      for:
        seconds: 3
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'on'
  action:
    - service: notify.notify
      data_template:
        message: "I'll wake you up at {{ states('input_datetime.alarm_clock')[:-3] }}"

# Device tracker
- id: notification_new_device
  alias: Notification New Device
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.event.data.host_name %}
            {{ trigger.event.data.host_name }}
          {% else %}
            {{ trigger.event.data.mac }}
          {% endif %}
        title: New device

# Keys left at home
- id: keys_left_in_room
  alias: Keys Left in Room
  trigger:
    - platform: state
      entity_id: device_tracker.tile
      to: 'home'
      from: 'not_home'
  action:
    - service: notify.notify
      data:
        message: "Your keys are still in your room"

# Plant needs water
- id: plant_needs_water
  alias: Plant Needs Water
  trigger:
    - platform: state
      entity_id: sensor.plant_needs_water
      to: 'on'
  action:
    - wait_template: "{{ is_state('input_select.home_status', 'Home') }}"    
    - service: notify.notify
      data_template:
        message: "The plant could use some water, it's moisture level has fallen to {{ states('sensor.mi_flora_moisture') }}"

# Helmet BT
- id: helmet_bt_still_on
  alias: Helmet BT still on
  trigger:
    - platform: state
      entity_id: device_tracker.mh01
      to: 'home'
      for:
        minutes: 5
  action:
    - service: notify.notify
      data:
        message: "Your helmet's bluetooth headset is still active, but not connected"

# Low battery
- id: notification_low_battery
  alias: Notification Low Battery
  trigger:
    - platform: numeric_state
      entity_id: sensor.aqara_button     
      value_template: '{{ state.attributes.battery }}'
      below: 11
    - platform: numeric_state
      entity_id: sensor.aqara_illuminance
      value_template: '{{ state.attributes.battery }}'
      below: 11
    - platform: numeric_state
      entity_id: sensor.aqara_temperature    
      value_template: '{{ state.attributes.battery }}'
      below: 11
    - platform: numeric_state
      entity_id: sensor.aqara_temperature_2
      value_template: '{{ state.attributes.battery }}'
      below: 11
    - platform: numeric_state
      entity_id: sensor.mijia_switch       
      value_template: '{{ state.attributes.battery }}'
      below: 11
  action:
    - service: persistent_notification.create
      data_template:
        message: "{{ state_attr(trigger.entity_id, 'friendly_name') }} {{ trigger.entity_id.split('.')[0] }} is at {{ state_attr(trigger.entity_id, 'battery') | int }}% battery."
        title: "Battery warning"

- id: notification_low_battery_mi_flora
  alias: Notification Low Battery Mi Flora
  trigger:
    - platform: numeric_state
      entity_id: sensor.mi_flora_battery
      below: 11
  action:
    - service: persistent_notification.create
      data_template:
        message: "Plant sensor is at {{ states('sensor.mi_flora_battery') | int }}% battery."
        title: "Battery warning"

# Scale
- id: notification_scale_measurement
  alias: Notification Scale Measurement
  trigger:
    - platform: mqtt
      topic: satellite/sensor/bs440/person1/state
  action:
    - service: notify.notify
      data_template:
        title: "Scale Measurement"
        message: >
          Weight: {{ trigger.payload_json.weight }}kg,
          Muscle Mass: {{ trigger.payload_json.muscle }}%,
          Body Water: {{ trigger.payload_json.tbw }}%,
          Body Fat: {{ trigger.payload_json.fat }}%,
          Bone Mass: {{ trigger.payload_json.bone }}%, 
          DCI: {{ trigger.payload_json.kcal }} kcal

# zigbee2mqtt
- id: notification_zigbee2mqtt
  alias: Notification zigbee2mqtt
  trigger:
    - platform: mqtt
      topic: zigbee2mqtt/bridge/log
  action:
    - service: notify.notify
      data_template:
        title: "zigbee2mqtt: {{ trigger.payload_json['type'] }}"
        message: "{{ trigger.payload_json['message'] | capitalize }}"

# PostNL
- id: notification_postnl
  alias: Notification PostNL
  trigger: 
    - platform: state
      entity_id: sensor.postnl
  action:
    - service: notify.notify
      data_template:
        title: "PostNL"
        message: "{{ trigger.to_state }}"

# transmission
- id: notification_torrent_complete
  alias: Notification Torrent Complete
  trigger:
    platform: event
    event_type: transmission_downloaded_torrent
  action:
    service: notify.notify
    data_template:
      title: "Download finished"
      message: ""
# minecraft
- id: notification_joined_minecraft
  alias: Notification Joined Minecraft
  trigger: 
    - platform: template
      value_template: "{{ 'joined the game' in states('sensor.minecraft_log') or 'left the game' in states('sensor.minecraft_log') }}"
  action:
    service: notify.notify
    data_template:
      title: "Minecraft Server"
      message: "{{ states('sensor.minecraft_log') }}"
