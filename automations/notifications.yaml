# Boot
- id: notification_boot
  alias: Notification Boot
  trigger:
    - platform: homeassistant
      event: start
  action:
    - service: script.broadcast
      data:
        message: "Home Assistant is online"

# # iPhone Status
# - id: notification_iphone_status
#   alias: Notification iPhone Status
#   trigger:
#     - platform: state
#       entity_id: sensor.iphone_8_battery_state
#       from: Unplugged
#     - platform: state
#       entity_id: sensor.iphone_8_battery_state
#       to: Unplugged
#   action:
#     - service: notify.notify
#       data_template:
#         message: "Your iPhone 8 is {{ states('sensor.iphone_8_battery_state') | lower }}."

# Device tracker
- id: notification_new_device
  alias: Notification New Device
  trigger:
    platform: event
    event_type: device_tracker_new_device
  action:
    - service: notify.notify
      data_template:
        message: >
          {% if trigger.event.data.host_name %}
            {{ trigger.event.data.host_name }}
          {% else %}
            {{ trigger.event.data.mac }}
          {% endif %}
        title: New device

# Keys left at home
- id: keys_left_in_room
  alias: Keys Left in Room
  trigger:
    - platform: state
      entity_id: device_tracker.tile
      to: 'home'
      from: 'not_home'
  action:
    - service: notify.notify
      data:
        message: "Your keys are still in your room"

# Helmet BT
- id: helmet_bt_still_on
  alias: Helmet BT still on
  trigger:
    - platform: state
      entity_id: device_tracker.mh01
      to: 'home'
      for:
        minutes: 5
  action:
    - service: script.broadcast
      data:
        message: "Your helmet's bluetooth headset is still active, but not connected"

# zigbee2mqtt
- id: notification_zigbee2mqtt
  alias: Notification zigbee2mqtt
  trigger:
    - platform: mqtt
      topic: zigbee2mqtt/bridge/log
  action:
    - service: notify.notify
      data_template:
        title: "zigbee2mqtt"
        message: "{{ trigger.payload_json['message'] | capitalize }}"

# PostNL
- id: notification_postnl
  alias: Notification PostNL
  trigger: 
    - platform: state
      entity_id: sensor.postnl
  action:
    - service: notify.notify
      data_template:
        title: "PostNL"
        message: "{{ trigger.to_state }}"

# transmission
- id: notification_torrent_complete
  alias: Notification Torrent Complete
  trigger:
    platform: event
    event_type: transmission_downloaded_torrent
  action:
    service: script.broadcast
    data_template:
      title: "Download Completed"
      message: "{{ trigger }}"
