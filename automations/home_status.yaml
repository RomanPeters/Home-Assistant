# Note: Climate Control is done in automation.temperature

# HOME
- id: home_status_to_home_from_away
  alias: Home Status to Home from Away
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Home
      from: Away
  action:
    - service: switch.turn_off
      entity_id: switch.air_purifier
    - service: switch.turn_on
      entity_id: switch.chromecast

- id: home_status_to_home_from_away_during_sunset
  alias: Home Status to Home from Away during Sunset
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Home
      from: Away
  condition:
    condition: and
    conditions:
      - condition: sun
        after: sunset
        after_offset: "-00:15:00"
      - condition: sun
        before: sunrise
  action:
    - service: python_script.sunset

- id: home_status_to_home_from_away_at_night_time
  alias: Home Status to Home from Away at night time
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Home
      from: Away
  condition:
    condition: or  # 'when dark' condition either after sunset or before sunrise
    conditions:
      - condition: sun
        after: sunset
      - condition: sun
        before: sunrise
  action:
    - service: scene.turn_on
      entity_id: scene.evening


# AWAY
- id: home_status_to_away
  alias: Home Status to Away
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Away
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.chromecast

- id: home_status_to_away_for_one_minute
  alias: Home Status to Away for one minute
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Away
      for:
        minutes: 1
  action:
    - service: switch.turn_on
      entity_id: switch.air_purifier

# Night
- id: home_status_to_night
  alias: Home Status to Night
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Night
  action:
    - service: light.turn_off
      entity_id: group.all_lights
    - service: switch.turn_off
      entity_id: switch.chromecast

- id: home_status_to_night_auto_alarm_clock
  alias: Home Status to Night Auto Alarm Clock
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: Night
  condition:
    - condition: state
      entity_id: input_boolean.alarm_clock
      state: 'off'
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.alarm_clock
    - service: script.turn_on
      entity_id: script.set_alarm_clock

# OFF
- id: home_status_to_off
  alias: Home Status to Off
  trigger:
    - platform: state
      entity_id: input_select.home_status
      to: 'Off'
  action:
    - service: automation.turn_off
      entity_id: group.home_status_automations

- id: home_status_from_off
  alias: Home Status from Off
  trigger:
    - platform: state
      entity_id: input_select.home_status
      from: 'Off'
  action:
    - service: automation.turn_on
      entity_id: group.home_status_automations


# Link Alarm System for HomeKit
- id: home_status_to_alarm_system
  alias: Home Status to Alarm System
  trigger:
    - platform: state
      entity_id: input_select.home_status
  action:
    - service_template: "alarm_control_panel.alarm_arm_{{ states('input_select.home_status') | lower }}"
      entity_id: alarm_control_panel.home_status
- id: alarm_system_to_home_status 
  alias: Alarm System to Home Status
  trigger:
    - platform: state
      entity_id: alarm_control_panel.home_status
  action:
    - service: input_select.select_option
      data_template:
        entity_id: input_select.home_status
        option: >
          {% if states('alarm_control_panel.home_status') == 'disarmed' %}
            "Off"
          {% else %}
            {{ states('alarm_control_panel.home_status').split('_')[-1] | title }}
          {% endif %}


